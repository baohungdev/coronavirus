{"version":3,"sources":["api/index.js","components/Cards/Cards.jsx","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Iconlists/Iconlists.jsx","App.jsx","index.js","App.module.css","images/image.png"],"names":["url","fetchData","country","a","changeableURL","Axios","get","data","confirmed","deaths","recovered","lastUpdate","modifiedData","fetchDailyData","map","dailyData","reportDate","fetchCountries","countries","response","name","Cards","className","Grid","container","spacing","justify","item","component","Card","xs","md","CardContent","Typography","color","gutterBottom","start","end","value","duration","separator","Date","toDateString","variant","Chart","useState","DailyData","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","total","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","key","IconList","href","App","state","fetchedData","setState","render","styles","src","image","alt","this","Component","ReactDom","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0e50f1ef.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n\r\n    let changeableURL = url;\r\n\r\n    if (country) {\r\n        changeableURL = `${url}/countries/${country}`\r\n    }\r\n\r\n    try {\r\n        const {\r\n            data: {\r\n                confirmed,\r\n                deaths,\r\n                recovered,\r\n                lastUpdate\r\n            }\r\n        } = await Axios.get(changeableURL);\r\n        const modifiedData = {\r\n            confirmed,\r\n            deaths,\r\n            recovered,\r\n            lastUpdate\r\n        };\r\n        return modifiedData;\r\n    } catch (error) {}\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const {\r\n            data\r\n        } = await Axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed,\r\n            deaths: dailyData.deaths,\r\n            data: dailyData.reportDate\r\n        }));\r\n        return modifiedData;\r\n    } catch (error) {}\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {\r\n            data: {\r\n                countries\r\n            }\r\n        } = await Axios.get(`${url}/countries`);\r\n        const response = countries.map((country) => country.name);\r\n        return response;\r\n    } catch (error) {\r\n\r\n    }\r\n}","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport \"./Cards.style.css\";\r\nconst Cards = ({ data: { confirmed, deaths, recovered, lastUpdate } }) => {\r\n  if (!confirmed) return \"Loading..\";\r\n  return (\r\n    <div className=\"container\">\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item component={Card} xs={12} md={3} className=\"card confirmed\">\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography>\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className=\"card recovered\">\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recoveries\r\n            </Typography>\r\n            <Typography>\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active Recoveries from COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className=\"card deaths\">\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography>\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active Deaths of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport \"./Chart.style.css\";\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [DailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = DailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: DailyData.map(({ data }) => data),\r\n        datasets: [\r\n          {\r\n            data: DailyData.map(({ confirmed }) => confirmed.total),\r\n            label: \"Infected\",\r\n            borderColor: \"#d7af70\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: DailyData.map(({ deaths }) => deaths.total),\r\n            label: \"Deaths\",\r\n            borderColor: \"#77625C\",\r\n            backgroundColor: \"#ac9969\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgb(193, 140, 93)\",\r\n              \"rgb(169, 153, 133)\",\r\n              \"rgb(98, 144, 200)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n  return <div className=\"container\">{country ? barChart : lineChart}</div>;\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport { fetchCountries } from \"../../api\";\r\nimport \"./CountryPicker.style.css\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <FormControl className=\"formControl\">\r\n        <NativeSelect\r\n          defaultValue=\"\"\r\n          onChange={(e) => handleCountryChange(e.target.value)}\r\n        >\r\n          <option value=\"\">Global</option>\r\n          {fetchedCountries.map((country) => (\r\n            <option key={country} value={country}>\r\n              {country}\r\n            </option>\r\n          ))}\r\n        </NativeSelect>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport \"./iconlists.style.css\";\r\n\r\nconst IconList = () => {\r\n  return (\r\n    <section className=\"footer\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-between\">\r\n          <div className=\"col-auto\">\r\n            <ul className=\"footer__social-lists\">\r\n              <li>\r\n                <a href=\"https://www.facebook.com/dbhungUIT\">\r\n                  <FacebookIcon className=\"svg_icons\" />\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"https://www.instagram.com/hunhjax/\">\r\n                  <InstagramIcon className=\"svg_icons\" />\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"https://github.com/motcondicontrinh1\">\r\n                  <GitHubIcon className=\"svg_icons\" />\r\n                </a>\r\n              </li>\r\n\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default IconList;\r\n","import React, { Component } from \"react\";\r\nimport { fetchData } from \"./api\";\r\nimport { Cards, Chart, CountryPicker, IconList } from \"./components\";\r\nimport styles from \"./App.module.css\";\r\nimport image from \"./images/image.png\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: fetchedData, country: country });\r\n  };\r\n\r\n  render = () => {\r\n    const { data, country } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <img className=\"image\" src={image} alt=\"\" />\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n        <IconList />\r\n      </div>\r\n    );\r\n  };\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport App from './App.jsx';\r\n\r\nReactDom.render( < App / > , document.getElementById(\"root\"));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3ybWU\",\"image\":\"App_image__34Qnp\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}